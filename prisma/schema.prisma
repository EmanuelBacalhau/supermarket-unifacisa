generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Employee {
  id        String   @id @default(cuid()) @map("_id")
  name      String
  birthday  DateTime
  cpf       String   @unique
  email     String   @unique
  password  String
  role      String   @default("EMPLOYEE")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at")

  @@map("employees")
}

model Client {
  id       String   @id @default(cuid()) @map("_id")
  name     String
  birthday DateTime
  cpf      String   @unique
  email    String   @unique
  password String
  role     String?  @default("CLIENT")

  orders     Order[]
  promotions PromotionClient[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at")

  @@map("clients")
}

model Category {
  id        String   @id @default(cuid()) @map("_id")
  name      String   @unique
  createdAt DateTime @default(now()) @map("created_at")
  updateAt  DateTime @default(now()) @updatedAt @map("updated_at")

  products Product[]

  @@map("categories")
}

model Product {
  id                String   @id @default(cuid()) @map("_id")
  imageUrl          String
  name              String
  price             Float
  description       String
  amount            Int
  categoryId        String   @map("category_id")
  barCode           String   @unique @map("bar_code")
  manufacturingDate DateTime @map("manufacturing_date")
  expirationDate    DateTime @map("expirion_date")
  createdAt         DateTime @default(now()) @map("created_at")
  updatedAt         DateTime @default(now()) @updatedAt @map("updated_at")

  orders     Order[]
  promotions PromotionClient[]

  category Category @relation(fields: [categoryId], references: [id])

  @@map("products")
}

model Order {
  id        String   @id @default(cuid()) @map("_id")
  clientId  String   @map("client_id")
  productId String   @map("product_id")
  amount    Int
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at")

  client  Client  @relation(fields: [clientId], references: [id])
  product Product @relation(fields: [productId], references: [id])

  @@map("orders")
}

model Promotion {
  id         String   @id @default(cuid()) @map("_id")
  name       String?
  percentage Int
  startDate  DateTime
  endDate    DateTime

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at")

  promotionsClient PromotionClient[]

  @@map("promotions")
}

model PromotionClient {
  id          String @id @default(cuid()) @map("_id")
  promotionId String @map("promotion_id")
  productId   String @map("product_id")
  clientId    String @map("client_id")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @updatedAt @map("updated_at")

  client    Client    @relation(fields: [clientId], references: [id])
  product   Product   @relation(fields: [productId], references: [id])
  promotion Promotion @relation(fields: [promotionId], references: [id])

  @@map("promotions_to_clients")
}
